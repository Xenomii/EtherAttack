
Reentrancy in EtherStore.withdraw(uint256) (uploaded_files/temp_contract_file.sol#11-17):
	External calls:
	- (sent) = msg.sender.call{value: _amount}() (uploaded_files/temp_contract_file.sol#14)
	State variables written after the call(s):
	- balances[msg.sender] -= _amount (uploaded_files/temp_contract_file.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Pragma version^0.6.10 (uploaded_files/temp_contract_file.sol#2) allows old versions
solc-0.6.10 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in EtherStore.withdraw(uint256) (uploaded_files/temp_contract_file.sol#11-17):
	- (sent) = msg.sender.call{value: _amount}() (uploaded_files/temp_contract_file.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter EtherStore.withdraw(uint256)._amount (uploaded_files/temp_contract_file.sol#11) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

deposit() should be declared external:
	- EtherStore.deposit() (uploaded_files/temp_contract_file.sol#7-9)
withdraw(uint256) should be declared external:
	- EtherStore.withdraw(uint256) (uploaded_files/temp_contract_file.sol#11-17)
getBalance() should be declared external:
	- EtherStore.getBalance() (uploaded_files/temp_contract_file.sol#18-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
uploaded_files/temp_contract_file.sol analyzed (1 contracts with 77 detectors), 8 result(s) found
